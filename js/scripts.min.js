var changeLogData = ["1.4.29 változásnapló","Az eszköz mostmár ismeri az időbélyegeket","Az eszköz mostmár ismeri a debug logok nagyrészét","[ame] konzol logok megfelelően kerülnek formázásra","Az eszköz mostmár automatikusan a lap aljára görget, ha kell","Feltételrendszer kibővítve"]

function showChangelog() {
    alert(changeLogData.join("\n - "))
    return false;
}

async function capture() {
    await html2canvas(document.querySelector("#capture"), { backgroundColor: null }).then((e) => {
        (document.getElementById("generatedImage").innerHTML = "Generált kép:<br>"), document.getElementById("generatedImage").appendChild(e);
    });
    window.scrollTo(-1,document.body.scrollHeight);
}

$(".form-control").on("input", ()=>{
    window.scrollTo(-1,document.body.scrollHeight);
})

$(document).ready(function () {
    function e() {
        $(".generated").remove(), $(".clear").remove();
        for (var e = $("textarea").val().split("\n"), t = 0; t < e.length; t++) $(".output").append('<div class="generated">' + e[t].slice(0) + '</div><div class="clear"></div>');
        $(".generated").each(function () {
            if (((txtString = $(this).text()), txtString.includes("mondja") && "*" != txtString[0] && txtString.includes("*"))) {
                for (var e = txtString.split("*"), t = e.length; t-- > 1;) e.splice(t, 0, "*");
                var r = 0;
                for (t = 0; t < e.length; t++) "*" == e[t] && (0 == r ? ((e[t] = "<span class='me'>*"), (r = 1)) : ((e[t] = "*<span class='white'>"), (r = 0))), (this.innerHTML = e.join(""));
            }
            if(txtString[0] == "[" && txtString[9] == "]" && txtString[1] != "|" && txtString[3] == ":" && txtString[6] == ":")
            {
                this.innerHTML = this.innerHTML.slice(10);
                txtString = txtString.slice(11);
            }
            var deletelist = ["    at ","Stopped resource","Stopping resource","Disconnected","sendBackData","alprFunctionMode","toggleLoginMusicMute", "[HIRDETÉS]","Hiba:","Siker:","Figyelmeztetés:","Információ:","[chat]","[OOC]","[WEB]","[I]","[H]","[S]","[F]","animations|","PM szolgálatba","focus (","Fetching","Unpacked in","inited","vuejs","|", "Loading","Loaded","Warning","Bounding Asset","===>","[info]","[V8]","MINUDUMP.","Property|","Connecting to:","natives","alt:V","Natives","initialized","Inited","Initializing","Injected","items ","factions|","keysDisabled:","forceHideToggleHUDAndChat","Vue Devtools","running Vue","vue-devtools","Error","Replayinterface","Started in","Client ","Cache ", "id: ","production mode","(found","Map store", "Shop|", "proceedToLogin", "development mode", "BASS:", "Game ", "Discord manager","discordManager"]
            deletelist.forEach((adat)=>{
                if(txtString.includes(adat)) {
                    this.remove();
                    console.log("törölve")
                }
            })
            var deletelist = ["*",">"," (( "," mondja:", " rádióba:", "**[ch:", "[ame]"]
            var found = deletelist.some( index => txtString.includes(index) );
            if(!found)
            {
                this.remove();
            }
            if(txtString.includes("[ame]"))
            {
                txtString = txtString.replace("[ame]", "> ").replace(":","");
                this.innerHTML = txtString;
            }
            "*" == txtString[0] && $(this).addClass("me"),
            "*" == txtString[11] && $(this).addClass("me"),
            txtString.toLowerCase().indexOf(" (( ") >= 0 && $(this).addClass("do"),
            ">" == txtString[0] && $(this).addClass("ame"),
            ">" == txtString[11] && $(this).addClass("ame"),
            txtString.toLowerCase().indexOf(" mondja:") >= 0 && $(this).addClass("white"),
            txtString.toLowerCase().indexOf(" rádióba:") >= 0 && $(this).addClass("grey"),
            txtString.toLowerCase().indexOf("**[ch:") >= 0 && $(this).addClass("radios"),
            txtString || $(this).remove(),
                $(".generated").css("background-color", "#" + $("#color-picker").spectrum("get").toHex());
        });
    }
    (charName = $("#name").val().toLowerCase()),
    $.jStorage.get("lastCharName") || $.jStorage.set("lastCharName", ""),
        $("#name").val($.jStorage.get("lastCharName")),
        $("#name").bind("input propertychange", function () {
            (charName = $("#name").val().toLowerCase()), $.jStorage.set("lastCharName", charName), e();
        });
    var t = $.jStorage.get("lastFontSize"),
        r = $.jStorage.get("lastLineHeight");
    t || r
        ? ($(".output").css({ "font-size": $.jStorage.get("lastFontSize") + "px", "line-height": $.jStorage.get("lastLineHeight") + "px" }), $("#font-label").text("Betűméret (" + $.jStorage.get("lastFontSize") + "px):"))
        : ($.jStorage.set("lastFontSize", "12"), $.jStorage.set("lastLineHeight", "0")),
        $("#decrease-fontsize").click(function () {
            (currentSize = parseInt($(".output").css("font-size"))),
                currentSize--,
                (currentLineHeight = parseInt($(".output").css("line-height"))),
                currentLineHeight--,
                currentLineHeight >= 0
                    ? ($(".output").css({ "font-size": currentSize + "px", "line-height": currentLineHeight + "px" }),
                        $("#font-label").text("Betűméret (" + currentSize + "px):"),
                        $.jStorage.set("lastFontSize", currentSize),
                        $.jStorage.set("lastFontSize", currentLineHeight))
                    : $(this).addClass("disabled");
        }),
        $("#increase-fontsize").click(function () {
            (currentSize = parseInt($(".output").css("font-size"))),
                currentSize++,
                (currentLineHeight = parseInt($(".output").css("line-height"))),
                currentLineHeight++,
                $(".output").css({ "font-size": currentSize + "px", "line-height": currentLineHeight + "px" }),
                $("#font-label").text("Betűméret (" + currentSize + "px):"),
                $.jStorage.set("lastFontSize", currentSize),
                $.jStorage.set("lastLineHeight", currentLineHeight),
                $("#decrease-fontsize").removeClass("disabled");
        }),
        $("#reset-fontsize").click(function () {
            $(".output").css({ "font-size": "12px", "line-height": "0px" }), $("#font-label").text("Betűméret (12px):"), $.jStorage.set("lastFontSize", "12"), $.jStorage.set("lastLineHeight", "0");
        }),
        $("textarea").bind("input propertychange", function () {
            e();
        }),
        $("#color-picker").spectrum({
            color: "#000",
            showInput: !0,
            preferredFormat: "hex",
            change: function () {
                $.jStorage.set("lastColor", $("#color-picker").spectrum("get").toHex()), $(".generated").css("background-color", "#" + $("#color-picker").spectrum("get").toHex());
            },
        });
        $("#color-picker").spectrum("set", $.jStorage.get("lastColor"));
}),
setInterval(() => {
    $("code").css("background-color", "#" + $("#color-picker").spectrum("get").toHex());
    $(".generated").css("background-color", "#" + $("#color-picker").spectrum("get").toHex());
    $.jStorage.set("lastColor", $("#color-picker").spectrum("get").toHex()), $(".generated").css("background-color", "#" + $("#color-picker").spectrum("get").toHex());
}, 25);
